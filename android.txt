#connect/disconnect
#if you use usb cable, you do not need connect to devices
adb tcpip 5555
adb connect [ip]
adb disconnect [ip]

# Показать подключенные устройсва
adb devices

# Скриншот
flick screenshot -p android -n test

# Видео
flick video -a start -p android  => flick video -a stop -p android -n <video name>

# Показать все установленные приложения
adb shell pm list packages -f [-s]

# Отправить на девайс
adb push /path/to/local/file /mnt/sdcard/path/to/file

# Открыть настройки (UI)
adb shell am start -a android.settings.AIRPLANE_MODE_SETTINGS

# Старт активити
adb shell am start -n <app bundle_id>/<app activity_name>

# Установить приложение
adb install <app path>

# Обновить приложение
adb install -r <app path>

# Закрыть приложение
adb shell am force-stop com.android.vending

# Удалить приложение
adb uninstall <app bundle_id>

# Лог
adb logcat -d > <log name>  =>  adb logcat -c
flick log -a start -p android -n <log name>  =>  flick log -a stop -p android

# Показать статус дисплея: lock/display:
adb shell dumpsys power | grep 'mHolding'

# Показать permissions приложения
aapt d permissions <app path>

# Показать манифест приложениz
aapt l -a <app path>

# Показать bundleId приложениz
aapt dump badging <app path> | grep -o "package: name='[^']*" | awk -F "='" '{print $2}'

# Показать launch-activity приложения
aapt dump badging <app path> | grep -o "launchable-activity: name='[^']*" | awk -F "='" '{print $2}'
или запустить приложение и грепнуть лог

# Разблокировать девайс
adb shell input keyevent KEYCODE_POWER
sleep 1
if [[ `adb shell dumpsys power | grep 'mHoldingDisplaySuspendBlocker=true'` == "" ]]; then
	adb shell input keyevent KEYCODE_POWER
fi
adb shell input text <password>
adb shell input keyevent KEYCODE_ENTER

# Положить aapt в переменную
AAPT=`ls $ANDROID_HOME/build-tools/*/aapt | tail -n1`

# Показать build version приложения
adb shell dumpsys package <app bundle_id> | grep versionCode

# Показать список properties
adb shell getprop

# Показать информацию о приложении в play store
https://androidquery.appspot.com/api/market?app=<app_package>

# Скачать приложение из play store
gp-download <app_package> > <apk_name>
gplaycli -d <app_package> -f <folder_path>

# Показать версию приложения в play store
gp-bulk-details <app_package> | jq -r ".[0] .details.appDetails.versionString"
gp-bulk-details <app_package> | jq -r ".[0] .details.appDetails.versionCode"

# Показать время на девайсе в ms («*1000» for unixtime type)
adb shell date +%s

# Показать android_id
adb shell settings get secure android_id

# Android Inspector
uiautomator

# Перейти на стартовую страницу (UI)
adb shell am start -a android.intent.action.MAIN -c android.intent.category.HOME

# Очистить девайс (clear data)
adb shell pm clear <package name>

# Установить permission
adb shell pm grant my.awesome.package.name android.permission.PERMISSION_THAT_YOU_NEED

# Unzip apk
apktool d <apk_name>

# Grand all apk permissions to device
aapt d permissions <apk_path> \
  | sed -n \
    -e "s/'//g" \
    -e "/^uses-permission: name=android.permission\./s/^[^=]*=//p" \
  | xargs -n 1 adb shell pm grant <app_package>

# Показать версию Android
adb shell getprop ro.build.version.release

# Показать текушую wifi
adb shell dumpsys netstats | grep 'networkId' | grep -v 'uid=-1'

# Вкл/выкл wifi (UI)
adb shell am start -a android.intent.action.MAIN -n com.android.settings/.wifi.WifiSettings
adb shell input keyevent 19 & adb shell input keyevent 19 & adb shell input keyevent 23
adb shell input keyevent 19 & adb shell input keyevent 19 & adb shell input keyevent 23

# Tap
adb shell input tap X Y

# Отправить referrer
bundleId=`aapt dump badging <apk_path> | grep -o "package: name='[^']*" | awk -F "='" '{print $2}'`
adb shell am broadcast -a com.android.vending.INSTALL_REFERRER  -n  com.my.target.unity/com.my.tracker.campaign.CampaignReceiver --es referrer WTxqp%3DACaLv%26mt_deeplink%3DHsBVy%3A%2F%2FKYZOE.pvgrN

# Выгрузить apk с девайса
apk=`adb shell pm path <your_bundle>`; apk=`echo $apk | awk '{print $NF}' FS=':' | tr -d '\r\n'`; adb pull $apk <path/to/save>

# Grep errors
adb logcat *:E

# Снять unix-time девайса
adb shell echo \$EPOCHREALTIME

# Грепнуть лог конкретного приложения
adb -d logcat <your package name>:<log level> *:S
example: adb -d logcat com.example.example:I *:S
