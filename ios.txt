Разблочить экран
sudo chmod -R 777 /var/db/lockdown/

Снять лог
idevicesyslog
flick log -a start -p ios -n <log name>  =>  flick log -a stop -p ios

Список установленных приложений
ideviceinstaller -l

Удалить приложение
ideviceinstaller --uninstall <app bundleId>

Установить приложение
ideviceinstaller -u $UDID -i <ipa path>

Обновить приложение
ideviceinstaller -u $UDID -g <ipa path>

Список подключенных девайсов
idevice_id -l

Инфа о девайсе
ideviceinfo

Диагностика девайса
idevicediagnostics diagnostics All

Перезагрузить девайса
idevicediagnostics restart

Изменить версию приложения
PlistBuddy -c "Set :CFBundleVersion $BUILD_NUMBER" <infoPlist path>

Вывести на экран infoPlist
PlistBuddy -c Print "<infoPlist path>"

Проверка статуса ImageSignature и ImagePresent
ideviceimagemounter -l

Вывести на экран бандл приложения
osascript `id of app "Payload/$APP_NAME"`

Запустить приложение
idevicedebug run $BUNDLE_ID

Сделать скриншот
flick screenshot -p ios -n <scr name>

Снять видео
flick video -a start -p ios  => flick video -a stop -p ios -n <video name>

Очистить лог симулятора
cp /dev/null $CoreSimulatorFolder/$UDID/system.log

Запустить симулятор
ios-sim start --devicetypeid <device package and name>

Установить приложение на симуляторе
ios-sim install <application path> --devicetypeid <device type>
xcrun simctl install booted <app path>
xcrun simctl install <device> <app path>

Запустить приложение на симуляторе
ios-sim launch <app path> --devicetypeid <device type>
xcrun simctl launch booted <app identifier>
xcrun simctl launch <device> <app identifier>

Удалить приложение на симуляторе
xcrun simctl uninstall booted <app identifier>
xcrun simctl uninstall <device> <app identifier>


Вывести на экран версию OS девайса
ideviceinfo -k ProductVersion

Вывести на экран версию приложения
ideviceinstaller -l | grep $BUNDLE_ID

Форматирование .app в .ipa
mkdir Payload && mv <app path> Payload && zip -r <ipa path> Payload/

iOS Инспектор
app-inspector -u <UDID>

Запуск нескольких инстансов ios симуляторов
open -n /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app/ --args -CurrentDeviceUDID '<device udid>'

Запуск симулятора (если инстанс уже есть, ничего не происходит)
xcrun instruments -w "<UDID>" -s

Информация о приложении в App Store
- информация о текущей версии: http://itunes.apple.com/ru/lookup?id=<your_id>
- информация о всех версиях: 	 https://itunes.apple.com/ru/rss/customerreviews/id=<your_id>/json

Вывести инфо о симуляторе
xcrun instruments -s devices | grep <udid>

Обновить idevicelib для ios10
brew install -v --HEAD --fresh --build-from-source libimobiledevice
brew install -v --HEAD --fresh --build-from-source ios-deploy

Парсер .plist
PlistBuddy -c 'Print <your_value>' Info.plist

Получить bundle_id приложения
mdls -name kMDItemCFBundleIdentifier -r SomeApp.app
/usr/libexec/PlistBuddy -c 'Print CFBundleIdentifier' /Applications/SomeApp.app/Info.plist

Показать BuildSettings таргета
xcodebuild -target <target> -configuration <configuration> -showBuildSettings

Установить значение требуемого парамтера BuildSettings
xcodebuild -target <target> -configuration <configuration> ${KEY}=<value>

Показать версию iOS
ideviceinfo -u <udid> -k ProductVersion

Отключить обновление на iOS
https://github.com/suisreaction/SUISReaction.github.io/blob/master/app/tvos10.mobileconfig

xcodebuild -destination
http://www.mokacoding.com/blog/xcodebuild-destination-options/

Вывести путь до песочнецы конкретного симулятора
xcrun simctl get_app_container <udid> <bundle_id>

Дернуть диплинк на симуляторе
xcrun simctl openurl booted "https://www.example.com/content?id=2"

XCUITest диплинки
let url = "sms://"
let safari = XCUIApplication(bundleIdentifier: "com.apple.mobilesafari")
safari.launch()
waitElement(safari.buttons["URL"]).tap()
safari.textFields["URL"].buttons.firstMatch.tap()
safari.textFields["URL"].typeText(url)
safari.buttons["Go"].tap()
safari.buttons.element(matching: NSPredicate(format: "label like 'Открыть' OR label like 'Open'")).tap()